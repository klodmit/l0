services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d postgres_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "29092:29092"
    environment:
      BITNAMI_DEBUG: "yes"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_KRAFT_CLUSTER_ID: "u9Z1wXQ8Qm2bJ0F5T6h7Iw"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx256m"
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions.sh --bootstrap-server localhost:9092 >/dev/null 2>&1" ]
      interval: 15s
      timeout: 10s
      retries: 20
    restart: unless-stopped

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: build/package/Dockerfile
      args:
        - VERSION=dev
        - GIT_COMMIT=local
    container_name: l0_app
    environment:
      # твой сервис читает YAML по CONFIG_PATH, так что дадим путь ВНУТРИ контейнера
      - CONFIG_PATH=/app/configs/dev_config.yaml

      # твой InitDB сейчас берёт из os.Getenv("DATABASE_URL")
      - DATABASE_URL=postgres://postgres_user:postgres_password@postgres:5432/postgres_db?sslmode=disable

      # kafka-go внутри docker-сети: брокеры — сервис kafka:9092
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC_ORDERS=orders
      - KAFKA_GROUP_ID=l0-orders-consumer
    ports:
      - "8082:8080"     # наружу
    volumes:
      - ./configs:/app/configs:ro
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
volumes:
  pgdata:
    driver: local
  kafka_data:
    driver: local
